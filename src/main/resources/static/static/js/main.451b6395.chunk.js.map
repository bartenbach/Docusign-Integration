{"version":3,"sources":["components/shared/BtButton.tsx","components/auth/Login.tsx","components/projects/AddProjectForm.tsx","components/projects/ProjectTable.tsx","components/projects/Projects.tsx","App.tsx","index.tsx"],"names":["BtButton","props","Box","m","display","Button","variant","color","href","link","type","onClick","clickfn","text","Login","AddProjectForm","initialFormState","projectName","useState","project","setProject","onSubmit","event","preventDefault","console","log","addProject","name","value","onChange","target","placeholder","ProjectTable","projects","length","map","data","projectId","deleteProject","colSpan","Projects","className","setProjects","filter","App","projectState","setProjectState","useEffect","fetch","then","res","json","catch","Divider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA0BeA,EAvB0B,SAACC,GACxC,OACE,cAACC,EAAA,EAAD,CAAKC,EAAG,EAAGC,QAAQ,eAAnB,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,KAAMP,EAAMQ,KACZC,KAAMT,EAAMS,KACZC,QAASV,EAAMW,QALjB,SAOGX,EAAMY,UCXA,SAASC,IACtB,OACE,gCACE,cAAC,EAAD,CAAUD,KAAK,YAAYJ,KAAK,WAChC,cAAC,EAAD,CAAUI,KAAK,UAAUJ,KAAK,c,4BC+BrBM,EAlCQ,SAACd,GACtB,IAAMe,EAAmB,CAAEC,YAAa,IADH,EAEPC,mBAASF,GAFF,mBAE9BG,EAF8B,KAErBC,EAFqB,KAQrC,OACE,uBACEC,SAAU,SAACC,GACTA,EAAMC,iBACDJ,EAAQF,aAIbO,QAAQC,IAAI,kBACZxB,EAAMyB,WAAWP,GACjBC,EAAWJ,IALTQ,QAAQC,IAAI,cAJlB,UAYE,yCACA,uBACEf,KAAK,OACLiB,KAAK,cACLC,MAAOT,EAAQF,YACfY,SAtBoB,SAACP,GAAkD,IAAD,EAClDA,EAAMQ,OAAtBH,EADkE,EAClEA,KAAMC,EAD4D,EAC5DA,MACdR,EAAW,2BAAKD,GAAN,kBAAgBQ,EAAOC,MAqB7BG,YAAY,iBAEd,cAAC,EAAD,CAAUrB,KAAK,SAASG,KAAK,SAASJ,KAAK,SCIlCuB,EAlCM,SAAC/B,GAAD,OACnB,kCACE,gCACE,+BACE,sCACA,oCACA,8CAGJ,gCACGA,EAAMgC,SAASC,OAAS,EACvBjC,EAAMgC,SAASE,KAAI,SAACC,GAAD,OACjB,+BACE,6BAAKA,EAAKnB,cACV,6BAAKmB,EAAKC,YACV,+BACE,cAAC,EAAD,CAAUxB,KAAK,OAAOJ,KAAK,KAC3B,cAAC,EAAD,CACEI,KAAK,SACLD,QAAS,kBAAMX,EAAMqC,cAAcF,EAAKnB,cACxCR,KAAK,UARF2B,EAAKC,cAchB,6BACE,oBAAIE,QAAS,EAAb,iCCYKC,EApCE,SAACvC,GAgBhB,OACE,sBAAKwC,UAAU,YAAf,UACE,iDACA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,aAAf,UACE,wCACA,cAAC,EAAD,CAAgBf,WAlBL,SAACP,GAClBlB,EAAMyC,YAAN,sBAAsBzC,EAAMgC,UAA5B,CAAsCd,WAmBlC,sBAAKsB,UAAU,aAAf,UACE,0CACA,cAAC,EAAD,CACER,SAAUhC,EAAMgC,SAChBK,cArBY,SAACrB,GACrBhB,EAAMyC,YACJzC,EAAMgC,SAASU,QACb,SAACxB,GAAD,OACEA,EAAQF,cAAgBA,mBCanB2B,MAtBf,WAAgB,IAAD,EAC2B1B,mBAAoB,IAD/C,mBACN2B,EADM,KACQC,EADR,KAYb,OATAC,qBAAU,WACRC,MAAM,qBACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACb,GACLU,EAAgBV,MAEjBgB,MAAM5B,QAAQC,OAChB,CAACqB,IAGF,sBAAKL,UAAU,MAAf,UACE,oDACA,cAAC3B,EAAD,IACA,cAACuC,EAAA,EAAD,IACA,cAAC,EAAD,CAAUpB,SAAUY,EAAcH,YAAaI,Q,MCnBrDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.451b6395.chunk.js","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const BtButton: React.FC<Props> = (props) => {\r\n  return (\r\n    <Box m={1} display=\"inline-block\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        href={props.link}\r\n        type={props.type}\r\n        onClick={props.clickfn}\r\n      >\r\n        {props.text}\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  text: string;\r\n  link: string;\r\n  type?: string;\r\n  clickfn?: any;\r\n}\r\n\r\nexport default BtButton;\r\n","import BtButton from \"../shared/BtButton\";\r\n\r\nexport default function Login() {\r\n  return (\r\n    <div>\r\n      <BtButton text=\"Homeowner\" link=\"/login\" />\r\n      <BtButton text=\"Builder\" link=\"/login\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport BtButton from \"../shared/BtButton\";\r\n\r\nconst AddProjectForm = (props: any) => {\r\n  const initialFormState = { projectName: \"\" };\r\n  const [project, setProject] = useState(initialFormState);\r\n\r\n  const handleInputChange = (event: { target: { name: any; value: any } }) => {\r\n    const { name, value } = event.target;\r\n    setProject({ ...project, [name]: value });\r\n  };\r\n  return (\r\n    <form\r\n      onSubmit={(event: { preventDefault: () => void }) => {\r\n        event.preventDefault();\r\n        if (!project.projectName) {\r\n          console.log(\"returning\");\r\n          return;\r\n        }\r\n        console.log(\"adding project\");\r\n        props.addProject(project);\r\n        setProject(initialFormState);\r\n      }}\r\n    >\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"projectName\"\r\n        value={project.projectName}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Project name\"\r\n      />\r\n      <BtButton type=\"submit\" text=\"Submit\" link=\"\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddProjectForm;\r\n","import BtButton from \"../shared/BtButton\";\r\n\r\nconst ProjectTable = (props: { projects: any[]; deleteProject: any }) => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Id</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.projects.length > 0 ? (\r\n        props.projects.map((data) => (\r\n          <tr key={data.projectId}>\r\n            <td>{data.projectName}</td>\r\n            <td>{data.projectId}</td>\r\n            <td>\r\n              <BtButton text=\"Edit\" link=\"\" />\r\n              <BtButton\r\n                text=\"Delete\"\r\n                clickfn={() => props.deleteProject(data.projectName)}\r\n                link=\"\"\r\n              />\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={3}>No projects</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default ProjectTable;\r\n","import React from \"react\";\r\nimport AddProjectForm from \"./AddProjectForm\";\r\nimport { Project } from \"./Project\";\r\nimport ProjectTable from \"./ProjectTable\";\r\n\r\nconst Projects = (props: {\r\n  projects: Array<Project>;\r\n  setProjects: (arg: Array<Project>) => void;\r\n}) => {\r\n  const addProject = (project: Project) => {\r\n    props.setProjects([...props.projects, project]);\r\n  };\r\n  const deleteProject = (projectName: string) => {\r\n    props.setProjects(\r\n      props.projects.filter(\r\n        (project: { projectName: string }) =>\r\n          project.projectName !== projectName\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Manage Projects</h1>\r\n      <div className=\"flex-row\">\r\n        <div className=\"flex-large\">\r\n          <h2>Create</h2>\r\n          <AddProjectForm addProject={addProject} />\r\n        </div>\r\n        <div className=\"flex-large\">\r\n          <h2>Projects</h2>\r\n          <ProjectTable\r\n            projects={props.projects}\r\n            deleteProject={deleteProject}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import { Divider } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"./components/auth/Login\";\r\nimport { Project } from \"./components/projects/Project\";\r\nimport Projects from \"./components/projects/Projects\";\r\n\r\nfunction App() {\r\n  const [projectState, setProjectState] = useState<Project[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/projects/100\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setProjectState(data);\r\n      })\r\n      .catch(console.log);\r\n  }, [setProjectState]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Docusign Prototype</h1>\r\n      <Login />\r\n      <Divider />\r\n      <Projects projects={projectState} setProjects={setProjectState} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}